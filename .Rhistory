select(Day, Day_Number, Weight) %>%
group_by(Day_Number, Day) %>%
## within country, take (lifeExp in year i) - (lifeExp in year i - 1)
## positive means lifeExp went up, negative means it went down
mutate(wt_delta = Weight - lag(Weight))
hello %>%
select(Day, Day_Number, Weight) %>%
group_by(Day_Number, Day)
hello %>%
select(Day, Day_Number, Weight) %>%
group_by(Day) %>%
## within country, take (lifeExp in year i) - (lifeExp in year i - 1)
## positive means lifeExp went up, negative means it went down
mutate(wt_delta = Weight - lag(Weight))
hello %>%
select(Day, Day_Number, Weight) %>%
group_by(Day_Number) %>%
## within country, take (lifeExp in year i) - (lifeExp in year i - 1)
## positive means lifeExp went up, negative means it went down
mutate(wt_delta = Weight - lag(Weight))
hello %>%
select(Day, Day_Number, Weight) %>%
group_by(Day) %>%
## within country, take (lifeExp in year i) - (lifeExp in year i - 1)
## positive means lifeExp went up, negative means it went down
mutate(wt_delta = Weight - lag(Weight))
hello %>%
select(Day, Day_Number, Weight) %>%
group_by(Day)
hello %>%
select(Day, Day_Number, Weight) %>%
group_by(Day) %>%
## within country, take (lifeExp in year i) - (lifeExp in year i - 1)
## positive means lifeExp went up, negative means it went down
mutate(wt_delta = Weight - lag(Weight))
ggplot(base, aes(x=value)) + geom_density(aes(color = Time))
library(tidyr)
base <- hello %>%
mutate(Time_Deep = Deep_Sleep * Time_Asleep / 100) %>%
mutate(Time_Light = Light_Sleep * Time_Asleep / 100) %>%
select("Day", "Time_Bed", "Time_Asleep", "Time_Sleep", "Time_Deep", "Time_Light")
base <- gather(base, Time_Asleep, value, -Day) %>%
setNames(., c("Day", "Time", "value"))
ggplot(base, aes(Day, value)) +
geom_bar(aes(fill = Time), position = "dodge", stat="identity") +
xlab("Day of Week") + ylab("Hours") +
theme(axis.text.x=element_text(angle=45,hjust=1))
library(weightprog)
base2 <- hello %>%
mutate(Time_Deep = Deep_Sleep * Time_Asleep / 100) %>%
mutate(Time_Light = Light_Sleep * Time_Asleep / 100) %>%
select("Distance","Time_Bed", "Time_Asleep", "Time_Deep", "Time_Light")
fit <- lm(Marginal_Weight ~ Distance + Time_Asleep + Time_Deep + Time_Light + Time_Bed, data=base2)
```{r}
base2 <- hello %>%
mutate(Time_Deep = Deep_Sleep * Time_Asleep / 100) %>%
mutate(Time_Light = Light_Sleep * Time_Asleep / 100) %>%
select("Distance","Time_Bed", "Time_Asleep", "Time_Deep", "Time_Light", "Marginal_Weight")
fit <- lm(Marginal_Weight ~ Distance + Time_Asleep + Time_Deep + Time_Light + Time_Bed, data=base2)
summary(fit) # show results
weightprog1 = aov(Marginal_Weight ~ Distance*Time_Deep, data = base2)
summary(weightprog1)
library(weightprog)
kable(summary(fit)) # show results
library(kable)
install.packages("kable")
library(weightprog)
library(weightprog)
library(weightprog)
library(weightprog)
library(weightprog)
?vplayout
??vplayout
library(weightprog)
?plotViewport
library(weightprog)
library(weightprog)
library(weightprog)
library(weightprog)
library(weightprog)
library(weightprog)
hello %>% filter(Class=="Gain") %>% ggplot(aes(Distance, Time_Bed)) + geom_bar()
library(tidyverse)
hello %>% filter(Class=="Gain") %>% ggplot(aes(Distance, Time_Bed)) + geom_bar()
library("googlesheets")
#dat <- gs_title("Benjamin Hsu_BST430 Data Collection")
mykey <- gs_url("https://docs.google.com/spreadsheets/d/10KwAd2PL4FXbNrWkhLstzeuKvR9NYhfvegtPdjfELcM/edit?usp=sharing", lookup=FALSE, visibility = "public")
hello <- gs_read(mykey)
hello$absmargweight <- abs(hello$Marginal_Weight)
hello$posnegmarg <- c("Loss","Maintain","Gain")[sign(hello$Marginal_Weight)+2]
colnames(hello)[colnames(hello)=="absmargweight"] <- "Marginal_Change"
colnames(hello)[colnames(hello)=="posnegmarg"] <- "Class"
View(hello)
hello %>% filter(Class=="Day")
hello %>% filter("Day")
hello %>% filter(Day)
hello %>% group_by(Day)
hello %>% group_by(Day) %>% ggplot(aes(Day, Distance, color = Day) + geom_jitter()
hello %>% group_by(Day) %>% ggplot(aes(Day, Distance, color = Day) + geom_jitter()
hello %>% group_by(Day) %>% ggplot(aes(Day, Distance, color = Day)) + geom_jitter()
hello %>% group_by(Day) %>% ggplot(aes(Day, Distance, color = Day)) + geom_jitter()  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black")
hello %>% group_by(Day) %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black")
hello %>% group_by(Day) %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
xlab(xlabel) +
ylab(ylabel) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
xlab(xlabel) +
ylab(ylabel) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
}
twoway_strip(hello, hello$Day, hello$Distance, " ",
hello$Day, "Day of Week", "Distance Walked (km)")
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip(hello, Day, Distance, " ",
hello$Day, "Day of Week", "Distance Walked (km)")
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
xlab(xlabel) +
ylab(ylabel) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
}
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
xlab(xlabel) +
ylab(ylabel) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
xlab(xlabel) +
ylab(ylabel) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
}
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip(hello, hello$Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
twoway_strip(hello, Day, Distance, " ",
hello$Day, "Day of Week", "Distance Walked (km)")
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
xlab(xlabel) +
ylab(ylabel) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
}
twoway_strip(hello, Day, Distance, " ",
Day, "Day of Week", "Distance Walked (km)")
library(tidyverse)
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
}
twoway_strip(hello, Day, Distance, " ",
Day)
library(tidyverse)
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
library(tidyverse)
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
library(tidyverse)
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
library(tidyverse)
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
library(tidyverse)
hello %>% ggplot(aes(Day, Distance, color = Day)) +
geom_jitter(position=position_jitter(0))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
ok
//
twoway_strip <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel) {
data %>% ggplot(aes(xname, yname, color = bycolor)) +
geom_jitter(position=position_jitter(0.2))  +
stat_summary(fun.y=mean, geom="line", aes(group = 1), size=0.25, color="grey40") +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black") +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
theme(legend.position="none")
}
twoway_strip(hello, Day, Distance, " ",
Day)
twoway_scatterg <- function(data, xname, yname, bysize, bycolor, xlabel, ylabel, guidesize, guidecolor) {
ggplot(data,aes(x=xname,y=yname)) +
geom_point(aes(size=bysize, fill=bycolor), shape=21,alpha=.8) +
geom_smooth(aes(col=bycolor), method="lm", se=F) +
guides(size = guide_legend(title = guidesize, title.position = "top")) +
guides(col = guide_legend(title = guidecolor, title.position = "top")) +
guides(fill = guide_legend(title = guidecolor, title.position = "top")) +
xlab(xlabel) +
ylab(ylabel) + theme_bw()
}
twoway_scatterc <- function(data, xname, yname, bycolor, shape, size, xlabel, ylabel, guidecolor) {
ggplot(data, aes(x = xname, y = yname, color = bycolor)) +
geom_point(shape = shape, size = size, show.legend = TRUE) +
geom_rug() +
theme_bw() +
scale_color_gradient(high = "#E51300", low = "#3BBF00") +
guides(color = guide_legend(title = guidecolor, title.position = "left")) +
xlab(xlabel) +
ylab(ylabel) +
theme(legend.position="top")
}
example <- iris
example$obj <- example[,1]-example[,2]
twoway_scatterg(example, example$Sepal.Length, example$Petal.Length,
example$obj, example$Species, "Sepal Length", "Petal Length"
"Species")
example <- iris
example$obj <- example[,1]-example[,2]
twoway_scatterg(example, example$Sepal.Length, example$Petal.Length,
example$obj, example$Species, "Sepal Length", "Petal Length",
"Species")
twoway_scatterg(example, example$Sepal.Length, example$Petal.Length,
example$obj, example$Species, "Sepal Length", "Petal Length",
"Petal Length", "Species")
twoway_scatterc(example, example$Sepal.Length, example$Petal.Length,
example$obj, 16, 3, "Sepal Length", "Petal Length",
"Sepal and Petal Length Diff")
library(weightprog)
install.packages("qpdf")
library(weightprog)
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
par(mfrow=c(3, 2)) #still trying to figure out how to make clusters fit
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
library(weightprog)
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ cluster.colors)
print(gg.k)
})
}
library(stats)
library(dplyr)
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
library(plyr)
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ colors)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ nlevels)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ byobj)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ x)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ x$cluster)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ kmax)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
k=1:kmax
twoway_kmeans <- function(data, kmax, xname, yname, xvar, yvar, byobj, xlabel, ylabel){
k=1:kmax
res.kmeans <- lapply(1:kmax, function(i) {
kmeans(data[,c(xname, yname)], centers = i)
})
cluster.colors <- lapply(res.kmeans, function(x) x$cluster)
l_ply(cluster.colors,
function(colors) {
gg.k <- ggplot(data, aes(xvar, yvar, col = colors)) +
geom_point() + labs(title = paste(nlevels(factor(colors)), "Cluster(s)")) +
geom_text(aes(label=byobj),hjust=0, vjust=0, cex=3) +
xlab(xlabel) + ylab(ylabel) +
facet_wrap( ~ kmax)
print(gg.k)
})
}
twoway_kmeans(hello, 5, "Distance", "Deep_Sleep",
hello$Distance, hello$Deep_Sleep, hello$Class,
"Distance (km)", "Deep Sleep (%)")
library(weightprog)
library(weightprog)
